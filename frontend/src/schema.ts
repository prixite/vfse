/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/health_network/": {
    get: operations["health_network_list"];
    post: operations["health_network_create"];
    parameters: {};
  };
  "/me/": {
    get: operations["me_read"];
    parameters: {};
  };
  "/organizations/": {
    get: operations["organizations_list"];
    post: operations["organizations_create"];
    parameters: {};
  };
  "/organizations/{id}/": {
    delete: operations["organizations_delete"];
    patch: operations["organizations_partial_update"];
    parameters: {
      path: {
        id: string;
      };
    };
  };
  "/organizations/{organization_pk}/health_networks/": {
    get: operations["organizations_health_networks_list"];
    parameters: {
      path: {
        organization_pk: string;
      };
    };
  };
  "/organizations/{organization_pk}/health_networks/{health_network_pk}/sites/": {
    get: operations["organizations_health_networks_sites_list"];
    parameters: {
      path: {
        health_network_pk: string;
        organization_pk: string;
      };
    };
  };
  "/organizations/{organization_pk}/users/": {
    get: operations["organizations_users_list"];
    parameters: {
      path: {
        organization_pk: string;
      };
    };
  };
  "/organizations/{organization_pk}/vfse_systems/": {
    get: operations["organizations_vfse_systems_list"];
    parameters: {
      path: {
        organization_pk: string;
      };
    };
  };
  "/sites/{site_pk}/systems/": {
    get: operations["sites_systems_list"];
    parameters: {
      path: {
        site_pk: string;
      };
    };
  };
  "/users/": {
    get: operations["users_list"];
    post: operations["users_create"];
    parameters: {};
  };
}

export interface definitions {
  /** HealthNetwork(id, name, logo, created_at, updated_at) */
  HealthNetwork: {
    id?: number;
    name: string;
    logo?: string;
  };
  OrganizationAppearance: {
    color_one: string;
    color_two: string;
    color_three: string;
    font_one: string;
    font_two: string;
  };
  /** Organization(id, name, logo, background_color, banner, number_of_seats, is_default, parent, appearance, created_at, updated_at) */
  Organization: {
    id?: number;
    name: string;
    logo?: string;
    background_color?: string;
    banner?: string;
    number_of_seats?: number;
    is_default?: boolean;
    appearance?: definitions["OrganizationAppearance"];
  };
  /** User(id, password, last_login, is_superuser, first_name, last_name, email, is_staff, is_active, date_joined, username, is_supermanager) */
  Me: {
    first_name?: string;
    last_name?: string;
    flags?: string;
    default_organization?: definitions["Organization"];
  };
  /** Site(id, organization_health_network, name, address, created_at, updated_at) */
  Site: {
    name: string;
    address: string;
  };
  /** User(id, password, last_login, is_superuser, first_name, last_name, email, is_staff, is_active, date_joined, username, is_supermanager) */
  User: {
    id?: number;
    first_name?: string;
    last_name?: string;
    email?: string;
    username: string;
  };
  /** System(id, site, modality, product, image, software_version, asset_number, ip_address, local_ae_title, serial_number, location_in_building, system_contact_info, documentation_link, system_option, connection_monitoring, other, created_at, updated_at) */
  System: {
    modality: number;
    product: number;
    image?: number;
    software_version: string;
    asset_number: string;
    ip_address: string;
    local_ae_title: string;
  };
}

export interface operations {
  health_network_list: {
    parameters: {};
    responses: {
      200: {
        schema: definitions["HealthNetwork"][];
      };
    };
  };
  health_network_create: {
    parameters: {
      body: {
        data: definitions["HealthNetwork"];
      };
    };
    responses: {
      201: {
        schema: definitions["HealthNetwork"];
      };
    };
  };
  me_read: {
    parameters: {};
    responses: {
      200: {
        schema: definitions["Me"];
      };
    };
  };
  organizations_list: {
    parameters: {};
    responses: {
      200: {
        schema: definitions["Organization"][];
      };
    };
  };
  organizations_create: {
    parameters: {
      body: {
        data: definitions["Organization"];
      };
    };
    responses: {
      201: {
        schema: definitions["Organization"];
      };
    };
  };
  organizations_delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      204: never;
    };
  };
  organizations_partial_update: {
    parameters: {
      path: {
        id: string;
      };
      body: {
        data: definitions["Organization"];
      };
    };
    responses: {
      200: {
        schema: definitions["Organization"];
      };
    };
  };
  organizations_health_networks_list: {
    parameters: {
      path: {
        organization_pk: string;
      };
    };
    responses: {
      200: {
        schema: definitions["HealthNetwork"][];
      };
    };
  };
  organizations_health_networks_sites_list: {
    parameters: {
      path: {
        health_network_pk: string;
        organization_pk: string;
      };
    };
    responses: {
      200: {
        schema: definitions["Site"][];
      };
    };
  };
  organizations_users_list: {
    parameters: {
      path: {
        organization_pk: string;
      };
    };
    responses: {
      200: {
        schema: definitions["User"][];
      };
    };
  };
  organizations_vfse_systems_list: {
    parameters: {
      path: {
        organization_pk: string;
      };
    };
    responses: {
      200: {
        schema: definitions["System"][];
      };
    };
  };
  sites_systems_list: {
    parameters: {
      path: {
        site_pk: string;
      };
    };
    responses: {
      200: {
        schema: definitions["System"][];
      };
    };
  };
  users_list: {
    parameters: {};
    responses: {
      200: {
        schema: definitions["User"][];
      };
    };
  };
  users_create: {
    parameters: {
      body: {
        data: definitions["User"];
      };
    };
    responses: {
      201: {
        schema: definitions["User"];
      };
    };
  };
}

export interface external {}
