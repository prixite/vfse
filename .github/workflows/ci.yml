name: CI

on:
  pull_request:
  workflow_call:

jobs:
  pr_created:
    # if: github.event.action == 'opened' || github.event.action == 'reopened'
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: if_pr
      if: github.event.pull_request
      run: |
        echo An pull request was Opened
        echo "${{github.event.pull_request.number}}"
    - uses: actions/checkout@v3
    - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          -name: PR Opened auto add reviewer
      run: |
        gh pr view "${{github.event.pull_request.number}}" > tmp.log
        gh pr edit "${{github.event.pull_request.number}}" --add-assignee ${{ github.event.pull_request.user.login }}
        TEMP=$(grep -hnr "#" tmp.log)
        ISSUENO=${TEMP#*#}
        printf -v ISSUENO '%s' $ISSUENO
        re='^[0-9]+$'
        if [[ $ISSUENO =~ $re ]]
        then
          gh issue view "$ISSUENO" > tmp.log
          LABELS=$(grep "labels:" tmp.log)
          if [[ $LABELS == *"Frontend"* ]]
          then
            gh pr edit "${{github.event.pull_request.number}}" --add-reviewer umairjameelprixite
            gh pr edit "${{github.event.pull_request.number}}" --add-reviewer umairwaheed
          else
            gh pr edit "${{github.event.pull_request.number}}" --add-reviewer umairwaheed
          fi
        fi
        echo "${{github.event.pull_request.number}}"

  pre-commit:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: npm
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9.7
          cache: pip
      - run: npm ci
      - uses: pre-commit/action@v3.0.0

  test:
    runs-on: self-hosted
    env:
      SECRET_KEY: "fake"
      NPLUSONE_RAISE: "False"
      DUO_CLIENT_ID: "fake"
      DUO_CLIENT_SECRET: "fake"
      DUO_API_HOSTNAME: "fake"
      DUO_REDIRECT_URI: "fake"
      AWS_STORAGE_BUCKET_NAME: "vfse-staging"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: npm
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9.7
          cache: pip
      - name: Install Python Dependencies
        run: |
          pip install -r requirements-dev.txt
      - name: Install Node Dependencies
        run: npm ci
      - name: Build Front-end
        run: |
          npm run build
          python manage.py collectstatic --noinput
      - name: Run Django system checks
        # https://docs.djangoproject.com/en/3.2/topics/checks/
        run: python manage.py check
      - name: Check missing migrations
        # https://stackoverflow.com/a/49794873/402560
        # NOTE: makemigrations will warn it can't "check a consistent migration history" because the database doesn't
        # exist. The warning doesn't impact the check for missing migrations
        run: python manage.py makemigrations --check --dry-run
      - name: Run Tests
        run: python manage.py test
