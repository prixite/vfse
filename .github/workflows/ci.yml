name: CI

on:
  pull_request:
  workflow_call:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.preCommitOutput.outputs.test }}

    env:
      DOMAIN_NAME: "https://app.vfse.io"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: npm
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9.7
          cache: pip
      - run: npm ci
      - uses: pre-commit/action@v3.0.0
      - id: preCommitOutput
        run: echo "::set-output name=test::${{ job.status }}"

  test:
    runs-on: ubuntu-latest
    outputs:
      output2: ${{ steps.buildTest.outputs.test }}
    env:
      SECRET_KEY: "fake"
      NPLUSONE_RAISE: "False"
      DUO_CLIENT_ID: "fake"
      DUO_CLIENT_SECRET: "fake"
      DUO_API_HOSTNAME: "fake"
      DUO_REDIRECT_URI: "fake"
      AWS_STORAGE_BUCKET_NAME: "vfse-staging"
      DOMAIN_NAME: "https://app.vfse.io"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: npm
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9.7
          cache: pip
      - name: Install Python Dependencies
        run: |
          pip install -r requirements-dev.txt
      - name: Install Node Dependencies
        run: npm ci
      - name: Build Front-end
        run: |
          npm run build
          python manage.py collectstatic --noinput
      - name: Run Django system checks
        # https://docs.djangoproject.com/en/3.2/topics/checks/
        run: python manage.py check
      - name: Check missing migrations
        # https://stackoverflow.com/a/49794873/402560
        # NOTE: makemigrations will warn it can't "check a consistent migration history" because the database doesn't
        # exist. The warning doesn't impact the check for missing migrations
        run: python manage.py makemigrations --check --dry-run
      - name: Run Tests
        run: python manage.py test
      - id: buildTest
        run: echo "::set-output name=test::${{ job.status }}"

  job_status_send:
    needs: [pre-commit, test]
    if: ${{github.event.pull_request}} && ${{ always() }}
    uses: ./.github/workflows/slack-action.yml
    with:
      slack_message: "GitHub Action Pre-Commit result: ${{ needs.pre-commit.outputs.output1 }} GitHub Action Build result: ${{ needs.test.outputs.output2 }} ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
